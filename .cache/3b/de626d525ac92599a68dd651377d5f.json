{"id":"Functions/Token/formatUploadSize.js","dependencies":[{"name":"C:\\Users\\inaba\\Programming\\Lewd2\\.babelrc","includedInParent":true,"mtime":1545517173655},{"name":"C:\\Users\\inaba\\Programming\\Lewd2\\package.json","includedInParent":true,"mtime":1545850952595}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconst units = {\n  B: 1,\n  kB: 1000,\n  MB: 1000000,\n  GB: 1000000000,\n  KiB: 1024,\n  MiB: 1048576,\n  GiB: 1073741824\n  /**\r\n   * Returns the input size in bytes according to the unit\r\n   * @param {number} size \r\n   * @param {string} unit \r\n   */\n\n};\n\nconst formatUploadSize = (size, unit) => parseInt(size) * units[unit];\n\nvar _default = formatUploadSize;\nexports.default = _default;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"Functions/Token/formatUploadSize.js","original":{"line":2,"column":0}},{"name":"units","generated":{"line":7,"column":6},"source":"Functions/Token/formatUploadSize.js","original":{"line":2,"column":6}},{"generated":{"line":7,"column":11},"source":"Functions/Token/formatUploadSize.js","original":{"line":2,"column":11}},{"generated":{"line":7,"column":14},"source":"Functions/Token/formatUploadSize.js","original":{"line":2,"column":14}},{"name":"B","generated":{"line":8,"column":0},"source":"Functions/Token/formatUploadSize.js","original":{"line":3,"column":4}},{"name":"B","generated":{"line":8,"column":2},"source":"Functions/Token/formatUploadSize.js","original":{"line":3,"column":4}},{"generated":{"line":8,"column":3},"source":"Functions/Token/formatUploadSize.js","original":{"line":3,"column":5}},{"generated":{"line":8,"column":5},"source":"Functions/Token/formatUploadSize.js","original":{"line":3,"column":7}},{"generated":{"line":8,"column":6},"source":"Functions/Token/formatUploadSize.js","original":{"line":2,"column":14}},{"name":"kB","generated":{"line":9,"column":0},"source":"Functions/Token/formatUploadSize.js","original":{"line":4,"column":4}},{"name":"kB","generated":{"line":9,"column":2},"source":"Functions/Token/formatUploadSize.js","original":{"line":4,"column":4}},{"generated":{"line":9,"column":4},"source":"Functions/Token/formatUploadSize.js","original":{"line":4,"column":6}},{"generated":{"line":9,"column":6},"source":"Functions/Token/formatUploadSize.js","original":{"line":4,"column":8}},{"generated":{"line":9,"column":10},"source":"Functions/Token/formatUploadSize.js","original":{"line":2,"column":14}},{"name":"MB","generated":{"line":10,"column":0},"source":"Functions/Token/formatUploadSize.js","original":{"line":5,"column":4}},{"name":"MB","generated":{"line":10,"column":2},"source":"Functions/Token/formatUploadSize.js","original":{"line":5,"column":4}},{"generated":{"line":10,"column":4},"source":"Functions/Token/formatUploadSize.js","original":{"line":5,"column":6}},{"generated":{"line":10,"column":6},"source":"Functions/Token/formatUploadSize.js","original":{"line":5,"column":8}},{"generated":{"line":10,"column":13},"source":"Functions/Token/formatUploadSize.js","original":{"line":2,"column":14}},{"name":"GB","generated":{"line":11,"column":0},"source":"Functions/Token/formatUploadSize.js","original":{"line":6,"column":4}},{"name":"GB","generated":{"line":11,"column":2},"source":"Functions/Token/formatUploadSize.js","original":{"line":6,"column":4}},{"generated":{"line":11,"column":4},"source":"Functions/Token/formatUploadSize.js","original":{"line":6,"column":6}},{"generated":{"line":11,"column":6},"source":"Functions/Token/formatUploadSize.js","original":{"line":6,"column":8}},{"generated":{"line":11,"column":16},"source":"Functions/Token/formatUploadSize.js","original":{"line":2,"column":14}},{"name":"KiB","generated":{"line":12,"column":0},"source":"Functions/Token/formatUploadSize.js","original":{"line":7,"column":4}},{"name":"KiB","generated":{"line":12,"column":2},"source":"Functions/Token/formatUploadSize.js","original":{"line":7,"column":4}},{"generated":{"line":12,"column":5},"source":"Functions/Token/formatUploadSize.js","original":{"line":7,"column":7}},{"generated":{"line":12,"column":7},"source":"Functions/Token/formatUploadSize.js","original":{"line":7,"column":9}},{"generated":{"line":12,"column":11},"source":"Functions/Token/formatUploadSize.js","original":{"line":2,"column":14}},{"name":"MiB","generated":{"line":13,"column":0},"source":"Functions/Token/formatUploadSize.js","original":{"line":8,"column":4}},{"name":"MiB","generated":{"line":13,"column":2},"source":"Functions/Token/formatUploadSize.js","original":{"line":8,"column":4}},{"generated":{"line":13,"column":5},"source":"Functions/Token/formatUploadSize.js","original":{"line":8,"column":7}},{"generated":{"line":13,"column":7},"source":"Functions/Token/formatUploadSize.js","original":{"line":8,"column":9}},{"generated":{"line":13,"column":14},"source":"Functions/Token/formatUploadSize.js","original":{"line":2,"column":14}},{"name":"GiB","generated":{"line":14,"column":0},"source":"Functions/Token/formatUploadSize.js","original":{"line":9,"column":4}},{"name":"GiB","generated":{"line":14,"column":2},"source":"Functions/Token/formatUploadSize.js","original":{"line":9,"column":4}},{"generated":{"line":14,"column":5},"source":"Functions/Token/formatUploadSize.js","original":{"line":9,"column":7}},{"generated":{"line":14,"column":7},"source":"Functions/Token/formatUploadSize.js","original":{"line":9,"column":9}},{"generated":{"line":15,"column":0},"source":"Functions/Token/formatUploadSize.js","original":{"line":11,"column":0}},{"generated":{"line":21,"column":0},"source":"Functions/Token/formatUploadSize.js","original":{"line":2,"column":14}},{"generated":{"line":21,"column":1},"source":"Functions/Token/formatUploadSize.js","original":{"line":2,"column":0}},{"generated":{"line":23,"column":0},"source":"Functions/Token/formatUploadSize.js","original":{"line":16,"column":0}},{"name":"formatUploadSize","generated":{"line":23,"column":6},"source":"Functions/Token/formatUploadSize.js","original":{"line":16,"column":6}},{"generated":{"line":23,"column":22},"source":"Functions/Token/formatUploadSize.js","original":{"line":16,"column":22}},{"generated":{"line":23,"column":25},"source":"Functions/Token/formatUploadSize.js","original":{"line":16,"column":25}},{"name":"size","generated":{"line":23,"column":26},"source":"Functions/Token/formatUploadSize.js","original":{"line":16,"column":26}},{"generated":{"line":23,"column":30},"source":"Functions/Token/formatUploadSize.js","original":{"line":16,"column":25}},{"name":"unit","generated":{"line":23,"column":32},"source":"Functions/Token/formatUploadSize.js","original":{"line":16,"column":32}},{"generated":{"line":23,"column":36},"source":"Functions/Token/formatUploadSize.js","original":{"line":16,"column":25}},{"name":"parseInt","generated":{"line":23,"column":41},"source":"Functions/Token/formatUploadSize.js","original":{"line":16,"column":41}},{"generated":{"line":23,"column":49},"source":"Functions/Token/formatUploadSize.js","original":{"line":16,"column":49}},{"name":"size","generated":{"line":23,"column":50},"source":"Functions/Token/formatUploadSize.js","original":{"line":16,"column":50}},{"generated":{"line":23,"column":54},"source":"Functions/Token/formatUploadSize.js","original":{"line":16,"column":49}},{"generated":{"line":23,"column":55},"source":"Functions/Token/formatUploadSize.js","original":{"line":16,"column":41}},{"name":"units","generated":{"line":23,"column":58},"source":"Functions/Token/formatUploadSize.js","original":{"line":16,"column":58}},{"generated":{"line":23,"column":63},"source":"Functions/Token/formatUploadSize.js","original":{"line":16,"column":63}},{"name":"unit","generated":{"line":23,"column":64},"source":"Functions/Token/formatUploadSize.js","original":{"line":16,"column":64}},{"generated":{"line":23,"column":68},"source":"Functions/Token/formatUploadSize.js","original":{"line":16,"column":63}},{"generated":{"line":23,"column":69},"source":"Functions/Token/formatUploadSize.js","original":{"line":16,"column":0}},{"name":"formatUploadSize","generated":{"line":25,"column":15},"source":"Functions/Token/formatUploadSize.js","original":{"line":19,"column":15}}],"sources":{"Functions/Token/formatUploadSize.js":"\r\nconst units = {\r\n    B: 1,\r\n    kB: 1000,\r\n    MB: 1000000,\r\n    GB: 1000000000,\r\n    KiB: 1024,\r\n    MiB: 1048576,\r\n    GiB: 1073741824\r\n}\r\n/**\r\n * Returns the input size in bytes according to the unit\r\n * @param {number} size \r\n * @param {string} unit \r\n */\r\nconst formatUploadSize = (size, unit) => parseInt(size) * units[unit];\r\n\r\n\r\nexport default formatUploadSize;\r\n\r\n"},"lineCount":null}},"hash":"7c7a25a3a67e178028b8aee5e89a3260","cacheData":{"env":{}}}